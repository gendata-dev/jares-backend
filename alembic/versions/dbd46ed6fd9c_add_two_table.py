"""add two table

Revision ID: dbd46ed6fd9c
Revises: 2662545c7130
Create Date: 2024-12-14 10:43:42.408120

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "dbd46ed6fd9c"
down_revision: Union[str, None] = "2662545c7130"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "question_categories",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("question_list", sa.ARRAY(sa.String(length=100)), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("category"),
    )
    op.create_table(
        "survey_question_categories",
        sa.Column("survey_id", sa.Integer(), nullable=False),
        sa.Column("question_category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["question_category_id"],
            ["question_categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["survey_id"],
            ["surveys.id"],
        ),
        sa.PrimaryKeyConstraint("survey_id", "question_category_id"),
    )
    op.add_column("questions", sa.Column("category_id", sa.Integer(), nullable=False))
    op.alter_column(
        "questions",
        "question_list",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        type_=sa.String(length=100),
        existing_nullable=False,
    )
    op.drop_constraint("questions_survey_id_fkey", "questions", type_="foreignkey")
    op.create_foreign_key(
        None, "questions", "question_categories", ["category_id"], ["id"]
    )
    op.drop_column("questions", "survey_id")
    op.add_column("surveys", sa.Column("name", sa.String(length=50), nullable=False))
    op.drop_constraint(
        "surveys_current_question_id_fkey", "surveys", type_="foreignkey"
    )
    op.drop_column("surveys", "current_question_id")
    op.drop_column("surveys", "survey_name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "surveys",
        sa.Column(
            "survey_name", sa.VARCHAR(length=50), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "surveys",
        sa.Column(
            "current_question_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.create_foreign_key(
        "surveys_current_question_id_fkey",
        "surveys",
        "questions",
        ["current_question_id"],
        ["id"],
    )
    op.drop_column("surveys", "name")
    op.add_column(
        "questions",
        sa.Column("survey_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "questions", type_="foreignkey")
    op.create_foreign_key(
        "questions_survey_id_fkey", "questions", "surveys", ["survey_id"], ["id"]
    )
    op.alter_column(
        "questions",
        "question_list",
        existing_type=sa.String(length=100),
        type_=postgresql.JSON(astext_type=sa.Text()),
        existing_nullable=False,
    )
    op.drop_column("questions", "category_id")
    op.drop_table("survey_question_categories")
    op.drop_table("question_categories")
    # ### end Alembic commands ###
